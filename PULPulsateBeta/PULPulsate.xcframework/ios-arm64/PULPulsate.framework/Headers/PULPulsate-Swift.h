#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef PULPULSATE_SWIFT_H
#define PULPULSATE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PULPulsate",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class PULAuthorizationData;

SWIFT_CLASS("_TtC10PULPulsate14PULAccessToken")
@interface PULAccessToken : NSObject
@property (nonatomic, copy) NSString * _Nullable accessToken;
@property (nonatomic, copy) NSString * _Nullable deviceGUID;
- (nonnull instancetype)initWithAuthorizationData:(PULAuthorizationData * _Nullable)authData OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP10PULPulsate19PULJSONSerializable_")
@protocol PULJSONSerializable <NSObject>
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary;
@end


SWIFT_CLASS("_TtC10PULPulsate19PULAdminHeaderBlock")
@interface PULAdminHeaderBlock : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSString * _Nullable adminAvatarUrl;
@property (nonatomic, copy) NSString * _Nullable adminName;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nullable message;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate20PULAuthorizationData")
@interface PULAuthorizationData : NSObject
/// Creates and validates the authorization data.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     pAppId: - APP ID from the Pulsate CMS
///   </li>
///   <li>
///     pAppKey: - APP KEY from the Pulsate CMS
///   </li>
///   <li>
///     error: - returns an error if PULAuthorizationData init fails. Nil if no error ocurred.
///   </li>
/// </ul>
///
/// returns:
/// instancetype
- (nullable instancetype)initWithAppId:(NSString * _Nullable)pAppId andAppKey:(NSString * _Nullable)pAppKey error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PULInitialsImageView;
@class UILabel;
@class NSCoder;

SWIFT_CLASS("_TtC10PULPulsate28PULBackOfCardPersonalization")
@interface PULBackOfCardPersonalization : UIView
@property (nonatomic, weak) IBOutlet PULInitialsImageView * _Null_unspecified avatar;
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified text;
- (void)awakeFromNib;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;

SWIFT_CLASS("_TtC10PULPulsate21PULBaseViewController")
@interface PULBaseViewController : UIViewController
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PULBeaconAction, open) {
  PULBeaconActionPulBeaconExit = 0,
  PULBeaconActionPulBeaconEnter = 1,
};


SWIFT_PROTOCOL("_TtP10PULPulsate22PULBlockDataInjectable_")
@protocol PULBlockDataInjectable <NSObject>
- (void)injectData:(id _Nullable)data;
@end


SWIFT_CLASS("_TtC10PULPulsate14PULBlurredView")
@interface PULBlurredView : UIView
- (void)setBlurredBackgroundViewWithColorIdentifier:(NSString * _Nullable)colorIdentifier;
- (void)layoutSubviews;
- (void)addSeparationLineAtBottom:(BOOL)bottom;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate9PULButton")
@interface PULButton : UIButton
- (void)prepareForInterfaceBuilder;
@property (nonatomic, copy) NSString * _Nonnull textColorIdentifier;
@property (nonatomic, copy) NSString * _Nonnull buttonColorIdentifier;
@property (nonatomic, copy) NSString * _Nonnull imageColorIdentifier;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;
@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC10PULPulsate24PULButtonTouchViewEffect")
@interface PULButtonTouchViewEffect : PULButton
@property (nonatomic, strong) UIColor * _Nullable touchDownColor;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate19PULButtonsBlockView")
@interface PULButtonsBlockView : UIView <PULBlockDataInjectable>
@property (nonatomic, copy) void (^ _Nullable callBack)(NSString * _Nonnull);
- (void)setCorners:(CGFloat)corner;
- (void)injectData:(id _Nullable)data;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate20PULCallToActionBlock")
@interface PULCallToActionBlock : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSArray * _Nullable buttons;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getViewIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getCacheIdentifier SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate21PULCallToActionButton")
@interface PULCallToActionButton : NSObject
@property (nonatomic, copy) NSString * _Nullable buttonLabel;
@property (nonatomic, copy) NSString * _Nullable destination;
@property (nonatomic, copy) NSArray * _Nullable customEvents;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PULCallToActionType, open) {
  PULCallToActionTypePulDismissBackCard = 0,
  PULCallToActionTypePulDismiss = 1,
  PULCallToActionTypePulLinkBackCard = 2,
  PULCallToActionTypePulLink = 3,
  PULCallToActionTypePulOpenFeedBackCard = 4,
  PULCallToActionTypePulOpenFeed = 5,
  PULCallToActionTypePulShowFeedBackCard = 6,
  PULCallToActionTypePulShowFeed = 7,
};

@class NSNumber;
@class NSDate;

SWIFT_CLASS("_TtC10PULPulsate7PULCard")
@interface PULCard : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSArray * _Nullable viewBlocks;
@property (nonatomic, copy) NSArray * _Nullable backViewBlocks;
@property (nonatomic, copy) NSString * _Nullable campaignGUID;
@property (nonatomic, strong) NSNumber * _Nullable allowReply;
@property (nonatomic, copy) NSDate * _Nullable createdAt;
@property (nonatomic, strong) NSNumber * _Nullable expiresAtTimestamp;
@property (nonatomic, strong) NSNumber * _Nullable messagesUnread;
@property (nonatomic, strong) NSNumber * _Nullable bothReplied;
@property (nonatomic) BOOL isLastSenderIsAdmin;
@property (nonatomic) BOOL isUnread;
@property (nonatomic) BOOL isContainsMessage;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PULTalk;

SWIFT_PROTOCOL("_TtP10PULPulsate34PULCreateTalkRemoteStorageDelegate_")
@protocol PULCreateTalkRemoteStorageDelegate
- (void)createTalkResultWithTalk:(PULTalk * _Nullable)talk;
@end

@protocol PULCreateTalkViewControllerDelegate;
@class UITextView;
@class UITextField;

SWIFT_CLASS("_TtC10PULPulsate27PULCreateTalkViewController")
@interface PULCreateTalkViewController : PULBaseViewController <PULCreateTalkRemoteStorageDelegate, UITextFieldDelegate, UITextViewDelegate>
@property (nonatomic, weak) id <PULCreateTalkViewControllerDelegate> _Nullable delegate;
- (void)viewDidLoad;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidLayoutSubviews;
- (void)textViewDidChange:(UITextView * _Nonnull)textView;
- (void)createTalkResultWithTalk:(PULTalk * _Nullable)talk;
- (BOOL)textFieldShouldReturn:(UITextField * _Nonnull)textField SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP10PULPulsate35PULCreateTalkViewControllerDelegate_")
@protocol PULCreateTalkViewControllerDelegate
- (void)showMessageWithTalk:(PULTalk * _Nonnull)talk thatHasBeenCreated:(BOOL)justCreated;
@end

typedef SWIFT_ENUM(NSInteger, PULCurrency, open) {
  PULCurrencyAUD = 0,
  PULCurrencyBGN = 1,
  PULCurrencyBRL = 2,
  PULCurrencyCAD = 3,
  PULCurrencyCHF = 4,
  PULCurrencyCNY = 5,
  PULCurrencyCZK = 6,
  PULCurrencyDKK = 7,
  PULCurrencyEUR = 8,
  PULCurrencyGBP = 9,
  PULCurrencyHKD = 10,
  PULCurrencyHRK = 11,
  PULCurrencyHUF = 12,
  PULCurrencyIDR = 13,
  PULCurrencyILS = 14,
  PULCurrencyINR = 15,
  PULCurrencyISK = 16,
  PULCurrencyJPY = 17,
  PULCurrencyKRW = 18,
  PULCurrencyMXN = 19,
  PULCurrencyMYR = 20,
  PULCurrencyNOK = 21,
  PULCurrencyNZD = 22,
  PULCurrencyPHP = 23,
  PULCurrencyPLN = 24,
  PULCurrencyRON = 25,
  PULCurrencyRUB = 26,
  PULCurrencySEK = 27,
  PULCurrencySGD = 28,
  PULCurrencyTHB = 29,
  PULCurrencyTRY = 30,
  PULCurrencyUSD = 31,
  PULCurrencyZAR = 32,
};

@class PULDBCustomAttribute;

SWIFT_CLASS("_TtC10PULPulsate25PULCustomAttributeAdapter")
@interface PULCustomAttributeAdapter : NSObject <PULJSONSerializable>
- (nonnull instancetype)initWithDbObject:(PULDBCustomAttribute * _Nullable)dbCustomAttribute OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("PULDBCustomAttribute")
@interface PULDBCustomAttribute : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PULDBCustomAttribute (SWIFT_EXTENSION(PULPulsate))
@property (nonatomic, copy) NSString * _Nullable action;
@property (nonatomic, strong) NSNumber * _Nullable creationTimeTimestamp;
@property (nonatomic, copy) NSString * _Nullable key;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, copy) NSString * _Nullable value;
@end


SWIFT_CLASS_NAMED("PULDBEvent")
@interface PULDBEvent : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PULDBEvent (SWIFT_EXTENSION(PULPulsate))
@property (nonatomic, strong) NSNumber * _Nullable lat;
@property (nonatomic, strong) NSNumber * _Nullable lon;
@property (nonatomic, strong) NSNumber * _Nullable timestamp;
@end


SWIFT_CLASS_NAMED("PULDBImpression")
@interface PULDBImpression : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PULDBImpression (SWIFT_EXTENSION(PULPulsate))
@property (nonatomic, copy) NSString * _Nullable guid;
@property (nonatomic, strong) NSNumber * _Nullable isTalkImpression;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
@end


SWIFT_CLASS_NAMED("PULDBScreenRecord")
@interface PULDBScreenRecord : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PULDBScreenRecord (SWIFT_EXTENSION(PULPulsate))
@property (nonatomic, copy) NSDate * _Nullable end_at;
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSDate * _Nullable start_at;
@end


SWIFT_CLASS_NAMED("PULDBUserAction")
@interface PULDBUserAction : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PULDBUserAction (SWIFT_EXTENSION(PULPulsate))
@property (nonatomic, copy) NSString * _Nullable action;
@property (nonatomic, copy) NSString * _Nullable guid;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
@property (nonatomic, copy) NSString * _Nullable type;
@end

@class PULScreenRecord;
@class PULLocation;
@class PULUserAction;

SWIFT_CLASS("_TtC10PULPulsate18PULDatabaseManager")
@interface PULDatabaseManager : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)setUpCoredataStackAndReturnError:(NSError * _Nullable * _Nullable)error;
- (void)changePersistentStoreToAlias:(NSString * _Nullable)alias;
- (void)changePersistentStoreToDefault;
- (BOOL)storeCustomAttributeWithKey:(NSString * _Nullable)key andValue:(NSString * _Nullable)value andType:(NSString * _Nullable)type andAction:(NSString * _Nullable)action error:(NSError * _Nullable * _Nullable)error;
- (NSArray<PULCustomAttributeAdapter *> * _Nullable)fetchCustomAttributes SWIFT_WARN_UNUSED_RESULT;
- (void)storeScreenRecordWith:(PULScreenRecord * _Nullable)record;
- (NSArray<PULScreenRecord *> * _Nonnull)fetchScreenRecords SWIFT_WARN_UNUSED_RESULT;
- (void)storeLocations:(PULLocation * _Nullable)record;
- (NSArray<PULLocation *> * _Nonnull)fetchLocations SWIFT_WARN_UNUSED_RESULT;
- (void)storeUserAction:(PULUserAction * _Nullable)record;
- (NSArray<PULUserAction *> * _Nonnull)fetchUserActions SWIFT_WARN_UNUSED_RESULT;
- (void)clearAllDataToSynchronise;
@end


SWIFT_CLASS("_TtC10PULPulsate9PULDevice")
@interface PULDevice : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSString * _Nullable token;
@property (nonatomic, copy) NSString * _Nullable osVersion;
@property (nonatomic, copy) NSString * _Nullable appVersion;
@property (nonatomic, copy) NSString * _Nullable sdkVersion;
@property (nonatomic, copy) NSString * _Nullable platform;
@property (nonatomic, copy) NSString * _Nullable operatorName;
@property (nonatomic, copy) NSString * _Nullable operatorCountryCode;
@property (nonatomic, copy) NSString * _Nullable operatorMobileCountryCode;
@property (nonatomic, copy) NSString * _Nullable operatorMobileNetworkCode;
@property (nonatomic, copy) NSString * _Nullable currentLanguage;
@property (nonatomic, copy) NSString * _Nullable timezone;
@property (nonatomic, copy) NSString * _Nullable bundleIdentifier;
@property (nonatomic, copy) NSString * _Nullable language;
@property (nonatomic, strong) NSNumber * _Nullable isLocationEnabled;
@property (nonatomic, strong) NSNumber * _Nullable isBackgroundLocationEnabled;
@property (nonatomic, strong) NSNumber * _Nullable isPushEnabled;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10PULPulsate28PULDynamicCardViewController")
@interface PULDynamicCardViewController : UIViewController
- (nonnull instancetype)initWithRenderables:(NSArray * _Nullable)viewBlocksRenderables OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)refreshWithRenderables:(NSArray * _Nullable)viewBlocksRenderables;
- (NSString * _Nullable)getAccessibilityMessage:(NSArray * _Nullable)viewBlocksRenderables SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)getEsimatedHeightForRenderables:(NSArray * _Nullable)viewBlockRenderables withWidth:(NSInteger)width SWIFT_WARN_UNUSED_RESULT;
- (void)setSubviewsBackgroundColor:(UIColor * _Nullable)color;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class UIImage;

SWIFT_CLASS("_TtC10PULPulsate19PULDynamicImageView")
@interface PULDynamicImageView : UIImageView
@property (nonatomic) CGRect bounds;
- (void)simulateImageWithSize:(CGSize)size;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate20PULDynamicViewBlocks")
@interface PULDynamicViewBlocks : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSArray * _Nullable viewBlocks;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate15PULEventAdapter")
@interface PULEventAdapter : NSObject <PULJSONSerializable>
- (nonnull instancetype)initWithDbObject:(PULDBEvent * _Nullable)dbEvent OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol PULFeedTableViewControllerDelegate;

SWIFT_CLASS("_TtC10PULPulsate26PULFeedTableViewController")
@interface PULFeedTableViewController : UIViewController
@property (nonatomic, weak) id <PULFeedTableViewControllerDelegate> _Nullable delegate;
@property (nonatomic) BOOL isSingleCardView;
@property (nonatomic, copy) NSString * _Nonnull singleCardGuid;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)fetchCardWithGuid:(NSString * _Nonnull)guid;
- (void)fetchTalkCardWithGuid:(NSString * _Nonnull)guid;
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end

@class UIScrollView;

@interface PULFeedTableViewController (SWIFT_EXTENSION(PULPulsate)) <UIScrollViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
@end


@class UITableView;
@class NSIndexPath;
@class UITableViewCell;

@interface PULFeedTableViewController (SWIFT_EXTENSION(PULPulsate)) <UITableViewDataSource, UITableViewDelegate>
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
@end



SWIFT_PROTOCOL("_TtP10PULPulsate34PULFeedTableViewControllerDelegate_")
@protocol PULFeedTableViewControllerDelegate
- (void)openBackOfTheCardFor:(PULCard * _Nonnull)card;
- (void)openMessageFor:(PULTalk * _Nonnull)talk;
- (void)openCardReplyFor:(PULCard * _Nonnull)talk;
- (void)didScrollDown:(BOOL)scrolledDown;
- (void)showNewCardsBullet;
- (void)willDisplayCell:(NSInteger)cellIndex;
@end


SWIFT_CLASS("_TtC10PULPulsate13PULImageBlock")
@interface PULImageBlock : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSString * _Nullable imageUrl;
@property (nonatomic, strong) NSNumber * _Nullable width;
@property (nonatomic, strong) NSNumber * _Nullable height;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate13PULImageCache")
@interface PULImageCache : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
+ (void)clearMemoryCaches;
@end


SWIFT_CLASS("_TtC10PULPulsate12PULImageView")
@interface PULImageView : UIImageView
@property (nonatomic, copy) IBInspectable NSString * _Nonnull imageColorIdentifier;
@property (nonatomic, copy) IBInspectable NSString * _Nonnull backgroundColorIdentifier;
- (void)prepareForInterfaceBuilder;
- (void)setImageColorTo:(UIColor * _Nonnull)color;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate23PULImageTouchViewEffect")
@interface PULImageTouchViewEffect : PULImageView
@property (nonatomic) BOOL onlyChangeAlpha;
- (void)startTint;
- (void)endTint;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesEnded:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (void)touchesCancelled:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=3.0);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@class NSLayoutConstraint;

SWIFT_CLASS("_TtC10PULPulsate21PULImageViewBlockView")
@interface PULImageViewBlockView : UIView <PULBlockDataInjectable>
@property (nonatomic, weak) IBOutlet PULDynamicImageView * _Null_unspecified dynamicImageView;
@property (nonatomic, strong) IBOutlet PULImageBlock * _Null_unspecified imageBlock;
@property (nonatomic, weak) IBOutlet UIImageView * _Null_unspecified loadingImage;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified bottomConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified topConstraint;
- (void)awakeFromNib;
- (void)injectData:(id _Nullable)data;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate19PULImpressionRecord")
@interface PULImpressionRecord : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSString * _Nullable guid;
@property (nonatomic) BOOL isTalk;
@property (nonatomic, copy) NSArray<NSDate *> * _Nullable impressionTimestamps;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate15PULInAppMessage")
@interface PULInAppMessage : NSObject <PULJSONSerializable>
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate20PULInitialsImageView")
@interface PULInitialsImageView : UIImageView
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)setAdminInitialsImageViewWith:(NSString * _Nonnull)userName andAvatarURL:(NSString * _Nonnull)url andTextColorIdentifier:(NSString * _Nonnull)textColorId andBackgroundColorIdentifier:(NSString * _Nonnull)backgroundColorId;
/// If background ID is nil the background color is set to clear color, not default
- (void)setUserInitialsImageViewWith:(NSString * _Nonnull)userName andAvatarURL:(NSString * _Nonnull)url andTextColorIdentifier:(NSString * _Nonnull)textColorId andBackgroundColorIdentifier:(NSString * _Nullable)backgroundColorId withDefaultImageName:(NSString * _Nonnull)defaultImageName setClearColorForDefaultImage:(BOOL)clearColorForImage;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC10PULPulsate24PULKeyValueTextBlockView")
@interface PULKeyValueTextBlockView : UIView <PULBlockDataInjectable>
- (void)injectData:(id _Nullable)data;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate22PULLabelsConfiguration")
@interface PULLabelsConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nullable replyButton;
@property (nonatomic, copy) NSString * _Nullable labelNewMessage;
@property (nonatomic, copy) NSString * _Nullable labelNewUpdates;
@property (nonatomic, copy) NSString * _Nullable labelNewMessages;
@property (nonatomic, copy) NSString * _Nullable viewConversation;
@property (nonatomic, copy) NSString * _Nullable selectSubject;
@property (nonatomic, copy) NSString * _Nullable writeAMessage;
@property (nonatomic, copy) NSString * _Nullable feedTitle;
@property (nonatomic, copy) NSString * _Nullable singleCardFeedTitle;
@property (nonatomic, copy) NSString * _Nullable createMessageTitle;
@property (nonatomic, copy) NSString * _Nullable serverErrorDeletedUserConnection;
@property (nonatomic, copy) NSString * _Nullable serverErrorConnection;
@property (nonatomic, copy) NSString * _Nullable serverErrorMessageConnection;
@property (nonatomic, copy) NSString * _Nullable sendButton;
@property (nonatomic, copy) NSString * _Nullable giveYourMessageSubject;
@property (nonatomic, copy) NSString * _Nullable sentAMessage;
@property (nonatomic, copy) NSString * _Nullable repliedToYour;
@property (nonatomic, copy) NSString * _Nullable bottomOfFeed;
@property (nonatomic, copy) NSString * _Nullable feedback;
@property (nonatomic, copy) NSString * _Nullable featureSuggestion;
@property (nonatomic, copy) NSString * _Nullable complaint;
@property (nonatomic, copy) NSString * _Nullable other;
@property (nonatomic, copy) NSString * _Nullable otherHint;
@property (nonatomic, copy) NSString * _Nullable youLabel;
@property (nonatomic, copy) NSString * _Nullable feedEmptyTitle;
@property (nonatomic, copy) NSString * _Nullable feedExpiredTitle;
@property (nonatomic, copy) NSString * _Nullable feedEmptyLeftIcon;
@property (nonatomic, copy) NSString * _Nullable feedEmptyRightIcon;
@property (nonatomic, copy) NSString * _Nullable feedEmptyBottomIcon;
@property (nonatomic, copy) NSString * _Nullable feedEmptySecondParagraph;
@property (nonatomic, copy) NSString * _Nullable messageSending;
@property (nonatomic, copy) NSString * _Nullable messageSent;
@property (nonatomic, copy) NSString * _Nullable messageFailed;
@property (nonatomic, copy) NSString * _Nullable messageTryAgain;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate11PULLocation")
@interface PULLocation : NSObject
@property (nonatomic) double longitude;
@property (nonatomic) double latitude;
@property (nonatomic) double verticalAccuracy;
@property (nonatomic) double horizontalAccuracy;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("PULLocationEntity")
@interface PULLocationEntity : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end


@interface PULLocationEntity (SWIFT_EXTENSION(PULPulsate))
@property (nonatomic, strong) NSNumber * _Nullable horizontalAccuracy;
@property (nonatomic, strong) NSNumber * _Nullable latitude;
@property (nonatomic, strong) NSNumber * _Nullable longitude;
@property (nonatomic, copy) NSString * _Nullable timestamp;
@property (nonatomic, strong) NSNumber * _Nullable verticalAccuracy;
@end


SWIFT_CLASS("_TtC10PULPulsate10PULMessage")
@interface PULMessage : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSString * _Nullable message;
@property (nonatomic, copy) NSDate * _Nullable createdAt;
@property (nonatomic, copy) NSString * _Nullable adminAvatarURL;
@property (nonatomic, copy) NSString * _Nullable userAvatarURL;
@property (nonatomic, copy) NSString * _Nullable parentTalkGUID;
@property (nonatomic) BOOL isAdmin;
@property (nonatomic, copy) NSString * _Nullable adminName;
@property (nonatomic, copy) NSString * _Nullable userName;
@property (nonatomic, copy) NSString * _Nullable adminTitle;
@property (nonatomic, strong) NSNumber * _Nullable timestampNumber;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP10PULPulsate23PULMessageModelDelegate_")
@protocol PULMessageModelDelegate <NSObject>
- (void)receivedMessages:(NSArray * _Nullable)messagesCame forTalkGUID:(NSString * _Nullable)talkGUID withMessageSubject:(NSString * _Nullable)subject;
- (void)failedToSendMessage;
- (void)failedToLoadMessages;
@end


SWIFT_CLASS("_TtC10PULPulsate16PULMessagesModel")
@interface PULMessagesModel : NSObject
@property (nonatomic, weak) id <PULMessageModelDelegate> _Nullable delegate;
- (nonnull instancetype)initWithAccessToken:(PULAccessToken * _Nullable)accessToken OBJC_DESIGNATED_INITIALIZER;
- (void)failedToLoadMessages;
- (void)messagesReceived:(NSArray * _Nullable)messages withNumberOfMessagesUnread:(NSNumber * _Nullable)numberOfMessages withMessageSubject:(NSString * _Nullable)messageSubject;
- (void)messageFailed;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate23PULNavigationController")
@interface PULNavigationController : UINavigationController
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)adjustNavBarColor;
- (BOOL)isNavigationBarVisible SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isNavbarAnimationFinished SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10PULPulsate22PULNormalTextBlockView")
@interface PULNormalTextBlockView : UIView <PULBlockDataInjectable>
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified contentLabel;
- (void)injectData:(id _Nullable)data;
+ (NSUInteger)getEstimatedHeightForTextForData:(id _Nonnull)data andWidth:(NSUInteger)width SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PULPrivacyLevel, open) {
  PULPrivacyLevelPulPrivacySubscribed = 0,
  PULPrivacyLevelPulPrivacyUnsubscribed = 1,
};


SWIFT_PROTOCOL("_TtP10PULPulsate23PULPulsateBadgeDelegate_")
@protocol PULPulsateBadgeDelegate
- (void)badgeUpdated:(NSInteger)badgeNumber;
- (void)badgeDecrementBy:(NSInteger)badgeDecrement totalCount:(NSInteger)badgeNumber;
- (void)badgeIncrementBy:(NSInteger)badgeIncrement totalCount:(NSInteger)badgeNumber;
@end


SWIFT_CLASS("_TtC10PULPulsate15PULPulsateError")
@interface PULPulsateError : NSObject
+ (NSError * _Nullable)createKeyErrorWithDescription:(NSString * _Nullable)description andCode:(NSInteger)errorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class PULPulsateManager;

SWIFT_CLASS("_TtC10PULPulsate17PULPulsateFactory")
@interface PULPulsateFactory : NSObject
+ (void)setBaseUrl:(NSString * _Nonnull)baseUrl;
+ (NSString * _Nullable)getBaseUrl SWIFT_WARN_UNUSED_RESULT;
/// Creates a PulsateManager instance with API Keys fetched from the *.plist file. If an instance
/// already exists it returns it instead.
/// The keys can be added to the *.plist file in such format:
/// <key>Pulsate</key>
/// <dict>
/// <key>App ID</key>
/// <string>XXXXXX</string>
/// <key>App Key</key>
/// <string>XXXXXX</string>
/// </dict>
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     locationEnabled: should location be enabled at start - this will show the location prompt on start of the session
///   </li>
///   <li>
///     pushEnabled:     should push be enabled at start - this will show the notifications prompt on start of the session
///   </li>
///   <li>
///     launchOptions:   launchOptions should be passed from the app delegate
///   </li>
///   <li>
///     error:           error
///   </li>
/// </ul>
///
/// returns:
/// returns nil if keys weren’t found
+ (PULPulsateManager * _Nullable)getInstanceWithLocationEnabled:(BOOL)locationEnabled withPushEnabled:(BOOL)pushEnabled withLaunchOptions:(NSDictionary * _Nullable)launchOptions error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Creates pulsate manager instance with given API keys. If an instance already exists
/// it returns it instead.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     authorizationData:    authorization data
///   </li>
///   <li>
///     locationEnabled:      hould location be enabled at start - this will show the location prompt on start of the session
///   </li>
///   <li>
///     pushEnabled:          should push be enabled at start - this will show the notifications prompt on start of the
///     session
///   </li>
///   <li>
///     isPulsateAppDelegate: should Pulsate be the main App Delegate - by default Pulsate is the AppDelegate, if you set
///     Pulsate to not be the AppDelegate you will need to redirect all needed callbacks to Pulsate
///   </li>
///   <li>
///     error:                error
///   </li>
/// </ul>
///
/// returns:
/// returns Pulsate Manager instance
+ (PULPulsateManager * _Nullable)getInstanceWithAuthorizationData:(PULAuthorizationData * _Nullable)authorizationData withLocationEnabled:(BOOL)locationEnabled withPushEnabled:(BOOL)pushEnabled withLaunchOptions:(NSDictionary * _Nullable)launchOptions withPulsateAppDelegate:(BOOL)isPulsateAppDelegate andPulsateNotificationDelegate:(BOOL)isPulsateNotificationDelegate error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Creates pulsate manager instance with given API keys. If an instance already exists
/// it returns it instead.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     authorizationData: authorization data
///   </li>
///   <li>
///     locationEnabled:   hould location be enabled at start - this will show the location prompt on start of the session
///   </li>
///   <li>
///     pushEnabled:       should push be enabled at start - this will show the notifications prompt on start of the session
///   </li>
///   <li>
///     error:             error
///   </li>
/// </ul>
///
/// returns:
/// returns Pulsate Manager instance
+ (PULPulsateManager * _Nullable)getInstanceWithAuthorizationData:(PULAuthorizationData * _Nullable)authorizationData withLocationEnabled:(BOOL)locationEnabled withPushEnabled:(BOOL)pushEnabled withLaunchOptions:(NSDictionary * _Nullable)launchOptions error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
+ (PULPulsateManager * _Nullable)getDefaultInstance SWIFT_WARN_UNUSED_RESULT;
/// initialize Pulsate manager with given data
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     token:           <#token description#>
///   </li>
///   <li>
///     error:           <#error description#>
///   </li>
///   <li>
///     locationEnabled: <#locationEnabled description#>
///   </li>
///   <li>
///     pushEnabled:     <#pushEnabled description#>
///   </li>
///   <li>
///     isPulsateAppDelegate: isPulsateAppDelegate description
///   </li>
/// </ul>
///
/// returns:
/// <#return value description#>
+ (PULPulsateManager * _Nullable)initDefaultWith:(PULAccessToken * _Nullable)token withLocationEnabled:(BOOL)locationEnabled withPushEnabled:(BOOL)pushEnabled withPulsateAppDelegate:(BOOL)isPulsateAppDelegate andPulsateNotificationDelegate:(BOOL)isPulsateNotificationDelegate error:(NSError * _Nullable * _Nullable)error SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// Creates a PulsateManager instance with API Keys fetched from the config, location enabled and push enabled. If an instance already exists it returns it instead.
///
/// returns:
/// returns Pulsate Manager instance
+ (PULPulsateManager * _Nullable)getInstanceWithLaunchOptions:(NSDictionary<NSString *, id> * _Nullable)launchOptions error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol PULPulsateUnauthorizedManagerDelegate;
@class UIUserNotificationSettings;
@class UIBarButtonItem;
enum PULUserGender : NSInteger;
@class NSDecimalNumber;
@class PULRevenueEvent;
@protocol UIApplicationDelegate;
@protocol UNUserNotificationCenterDelegate;

/// Starts Pulsate session lifecycle. If location and push were set as enabled it’ll show the prompts to the user.
/// Session starts when the app enters foreground and ends when it goes to background.
SWIFT_CLASS("_TtC10PULPulsate17PULPulsateManager")
@interface PULPulsateManager : NSObject
@property (nonatomic, weak) IBOutlet id <PULPulsateUnauthorizedManagerDelegate> _Nullable unauthorizedDelegate;
@property (nonatomic, weak) IBOutlet id <PULPulsateBadgeDelegate> _Nullable badgeDelegate;
/// Starts Pulsate session lifecycle. If location and push were set as enabled it’ll show the prompts to the user.
/// Session starts when the app enters foreground and ends when it goes to background.
- (void)startPulsateSessionWithAppBundleIdentifier:(NSString * _Nullable)appBundleIdentifier :(void (^ _Nonnull)(BOOL, NSError * _Nullable))listener;
/// Starts Pulsate session lifecycle for given user (alias). If location and push were set as enabled it’ll show the prompts to the user.
/// Session starts when the app enters foreground and ends when it goes to background.
- (void)startPulsateSessionForAlias:(NSString * _Nonnull)alias appBundleIdentifier:(NSString * _Nullable)appBundleIdentifier withListener:(void (^ _Nonnull)(BOOL, NSError * _Nullable))listener;
- (void)clearAllNotifications;
/// Logs out the current user
- (void)logout:(void (^ _Nonnull)(BOOL, NSError * _Nullable))listener;
/// If you chose to have location disabled when instantiating the Pulsate Manager, you can enable it later.
/// This enables you to postpone the location query prompt.
- (void)startLocation;
/// If you chose to have push disabled when instantiating the Pulsate Manager, you can enable it later.
/// This enables you to postpone the push query prompt.
- (void)startRemoteNotifications;
/// If you chose to have push disabled when instantiating the Pulsate Manager, you can enable it later.
/// This enables you to postpone the push query prompt and customize the push settings
- (void)startRemoteNotificationsWith:(UIUserNotificationSettings * _Nonnull)notificationSettings;
/// Creates and returns a Pulsate Feeed Navigation Controller. You can choose to present it however you see fit.
- (UINavigationController * _Nullable)getFeedNavigationController SWIFT_WARN_UNUSED_RESULT;
/// Allows Developers to get the Pulsate Inbox JSON that they can later render and show to the user in a custom way
- (void)getFeed:(NSString * _Nullable)page with:(void (^ _Nonnull)(NSArray * _Nullable, NSError * _Nullable))listener;
/// When using -(void)getFeed:(NSString*)page withListener:(nonnull FeedListener)listener;
/// We recommend using this method to pass user onClick events to Pulsate to properly handle it.
/// Pulsate will make sure that the click does what it should do - open url, open deeplink, send custom events, record opens / clicks
- (void)handleFeedClick:(id _Nullable)pulsateInboxItem;
/// If feed is opened automatically (by pressing a push notification for example) you might want to
/// hide it programatically.
- (void)closeAutomaticallyOpenedFeed;
/// Developers can now add an additional button in the Pulsate Feed. The button will appear in the main Feed Toolbar in the right corner.
/// To add this button you need to call the new setInboxRightButton method and pass an UIBarButtonItem that you want to show. This should be
/// done in the AppDelegate under didFinishLaunchingWithOptions.
/// \param rightButton UIBarButtonItem
///
- (void)setInboxRightButton:(UIBarButtonItem * _Nullable)rightButton;
/// Disables or Enables push notifications for Pulsate
/// \param enabled user’s push notification preference
///
- (void)setPushNotificationEnabled:(BOOL)enabled;
- (BOOL)isPushNotificationEnabled SWIFT_WARN_UNUSED_RESULT;
/// Sets user’s privacy settings.
/// \param privacyLevel user’s privacy level
///
- (void)setPrivacy:(enum PULPrivacyLevel)privacyLevel;
- (NSInteger)getPrivacy SWIFT_WARN_UNUSED_RESULT;
/// Enables or Disables using the user initials as the user avatar.
/// When disabled the avatar will always be an anon icon.
/// By default enabled
/// \param useInitials 
///
- (void)useInitialsForUserAvatar:(BOOL)useInitials;
- (BOOL)getUseInitialsForUserAvatar SWIFT_WARN_UNUSED_RESULT;
/// Enables or Disables the Geofencing and Beacon Scanning.
/// By default enabled.
- (void)setLocationUpdatesEnabled:(BOOL)enabled;
- (BOOL)isLocationEnabled SWIFT_WARN_UNUSED_RESULT;
/// Enables or Disables In-App Notifications. Default - YES.
- (void)enableInAppNotification:(BOOL)enabled;
- (BOOL)isInAppNotificationEnabled SWIFT_WARN_UNUSED_RESULT;
- (void)setSmallInAppNotificationDuration:(NSInteger)seconds;
- (NSInteger)getSmallInAppNotificationDuration SWIFT_WARN_UNUSED_RESULT;
/// Shows the last in app notification. In App Notification need to be enabled.
/// To enable in app notifications use enableInAppNotification(BOOL).
- (void)showLastInAppNotification:(BOOL)forceShow;
/// Set if user is authorized or not. The default is YES.
- (void)setUserAuthorized:(BOOL)authorized;
- (BOOL)isUserAuthorized SWIFT_WARN_UNUSED_RESULT;
/// Sets the create thread button in feed visibility.
/// \param buttonEnabled decides if the button should be enabled
///
- (void)setNewThreadButtonEnabled:(BOOL)buttonEnabled;
- (BOOL)isNewThreadButtonEnabled SWIFT_WARN_UNUSED_RESULT;
/// Updates the user’s first name. Gets updated when entering background.
/// \param firstName firstName - can’t be nil
///
- (void)updateFirstName:(NSString * _Nullable)firstName;
/// Updates the user’s last name. Gets updated when entering background.
/// \param lastName lastName - can’t be nil
///
- (void)updateLastName:(NSString * _Nullable)lastName;
/// Updates the user’s email. Gets updated when entering background.
/// \param email email - can’t be nil
///
- (void)updateEmail:(NSString * _Nullable)email;
/// Updates the user’s phone number. Gets updated when entering background.
/// Specify the phone number using the E.164 format. E.164 is a standard for the phone number structure used for international telecommunication.
/// Phone numbers that follow this format can have a maximum of 15 digits, and they are prefixed with the plus character (+) and the country code.
/// For example, a contact in the United States has a country code “1” , area code “408” and phone number “XXX-XXXX”, you’d enter +1408XXXXXXX.
/// \param phoneNumber - can’t be nil
///
- (void)updatePhoneNumber:(NSString * _Nullable)phoneNumber;
- (NSString * _Nullable)getPhoneNumber SWIFT_WARN_UNUSED_RESULT;
/// Updates user’s age. Gets updated when entering background.
/// \param age user’s age
///
- (void)updateAge:(NSInteger)age;
/// Updates user’s gender. Gets updated when entering background.
/// \param gender user’s gender
///
- (void)updateGender:(enum PULUserGender)gender;
/// Creates a custom attribute with a string. Neither can be nil. Gets updated when entering background.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     propertyName: custom attribute name
///   </li>
///   <li>
///     value:        attribute value
///   </li>
/// </ul>
- (void)createAttribute:(NSString * _Nullable)propertyName withString:(NSString * _Nullable)value;
/// Creates a custom attribute with a float. Key can’t be nil. Gets updated when entering background.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     propertyName: custom attribute name
///   </li>
///   <li>
///     number:       attribute value
///   </li>
/// </ul>
- (void)createAttribute:(NSString * _Nullable)propertyName withDecimal:(NSDecimalNumber * _Nullable)number;
/// Creates a custom attribute with an integer. Key can’t be nil. Gets updated when entering background.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     propertyName: custom attribute name
///   </li>
///   <li>
///     number:       attribute value
///   </li>
/// </ul>
- (void)createAttribute:(NSString * _Nullable)propertyName withInteger:(NSInteger)number;
/// Creates custom attribute with a bool. Key can’t be nil. Gets updated when entering background.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     propertyName: custom attribute name
///   </li>
///   <li>
///     boolean:      attribute value
///   </li>
/// </ul>
- (void)createAttribute:(NSString * _Nullable)propertyName withBoolean:(BOOL)boolean;
/// Creates custom attribute with a date. Key can’t be nil. Gets updated when entering background.
/// date:
/// attribute value
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     propertyName: custom attribute name
///   </li>
/// </ul>
- (void)createAttribute:(NSString * _Nullable)propertyName withDate:(NSDate * _Nullable)date;
/// Increments given integer attribute by given value. Gets updated when entering background.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     attributeName: which attribute to increment
///   </li>
///   <li>
///     value:         value to increment by
///   </li>
/// </ul>
- (void)incrementIntegerAttribute:(NSString * _Nullable)attributeName withInteger:(NSInteger)value;
/// Decrements given integer attribute by given. Gets updated when entering background.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     attributeName: custom attribute name
///   </li>
///   <li>
///     value:         attribute value
///   </li>
/// </ul>
- (void)decrementIntegerAttribute:(NSString * _Nullable)attributeName withInteger:(NSInteger)value;
/// Increments given float attribute with given value. Gets updated when entering background.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     attributeName: custom attribute name
///   </li>
///   <li>
///     value:         attribute value
///   </li>
/// </ul>
- (void)incrementDecimalAttribute:(NSString * _Nullable)attributeName withDecimal:(NSDecimalNumber * _Nullable)value;
/// Decrements given float attribute with given value. Gets updated when entering background.
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     attributeName: custom attribute name
///   </li>
///   <li>
///     value:         attribute value
///   </li>
/// </ul>
- (void)decrementDecimalAttribute:(NSString * _Nullable)attributeName withDecimal:(NSDecimalNumber * _Nullable)value;
/// Sends a custom in app event
/// \param event event to be sent - can’t be nil
///
- (void)createEvent:(NSString * _Nullable)event;
- (void)createEvents:(NSArray * _Nullable)event;
/// Sends a custom revenue event
/// \param revenueEvent event to be sent - can’t be nil
///
- (void)createRevenueEvent:(PULRevenueEvent * _Nullable)revenueEvent;
/// Attributes synchronize when the app is entering background. This method forces the synchronization to happen instantly.
- (void)forceAttributeSync;
- (void)showCampaignExpired;
/// Decides if beacon actions should be sent with a location. The default is NO.
- (void)sendLocationWithBeaconEvents:(BOOL)sendLocation;
/// Returns the Device Guid that Pulsate uses to identify users.
- (NSString * _Nullable)getDeviceGuid SWIFT_WARN_UNUSED_RESULT;
/// Sends a request to the server to get the Pulsate badge count.
/// The badge count will be returned in the PULPulsateBadgeDelegate badgeUpdated callback.
- (void)getBadgeCount;
- (void)saveUnauthorizedCampaignWithGUID:(NSString * _Nullable)guid andTitle:(NSString * _Nullable)title andAllowReply:(BOOL)allowReply andNotificationMessage:(NSString * _Nullable)notificationMessage;
- (void)saveUnauthorizedMessageWithGUID:(NSString * _Nullable)guid andTitle:(NSString * _Nullable)title andAdminHeader:(PULAdminHeaderBlock * _Nullable)adminHeader andCampaignGuid:(NSString * _Nullable)campaignGuid;
- (void)saveUnauthorizedCtaAction:(NSString * _Nullable)destination_type andDestination:(NSString * _Nullable)destination;
/// Shows the last blocked message or card. User must be authorized.
/// To authorize a user use setUserAuthorized(BOOL).
- (void)showLastUnauthorizedMessage;
- (void)removeUnauthorizedMessage;
- (BOOL)receivedCampaign:(NSString * _Nullable)campaignGUID withTitle:(NSString * _Nullable)title andAllowReply:(BOOL)allowReply andNotificationMessage:(NSString * _Nullable)notificationMessage fromForeground:(BOOL)foreground fromClick:(BOOL)isClick SWIFT_WARN_UNUSED_RESULT;
- (BOOL)receivedMessage:(NSString * _Nullable)talkGUID withTitle:(NSString * _Nullable)title andAdminHeader:(PULAdminHeaderBlock * _Nullable)adminHeader andCampaignGuid:(NSString * _Nullable)campaignGuid fromForeground:(BOOL)foreground SWIFT_WARN_UNUSED_RESULT;
- (void)recordUserActionWithGuid:(NSString * _Nullable)guid withAction:(NSString * _Nullable)action withType:(NSString * _Nullable)type;
- (void)received:(PULInAppMessage * _Nullable)inAppMessage :(BOOL)forceShow;
/// Shows the last in app notification. In App Notification need to be enabled.
/// To enable in app notifications use enableInAppNotification(BOOL).
- (id <UIApplicationDelegate, UNUserNotificationCenterDelegate> _Nullable)getPulsateSystemManager SWIFT_WARN_UNUSED_RESULT;
/// Sends a request to the server to get the Pulsate badge count.
/// The badge count will be returned in the PULPulsateBadgeDelegate badgeUpdated callback.
- (void)startBackgroundUpdates:(void (^ _Nonnull)(BOOL, NSError * _Nullable))listener;
- (void)showFake1;
- (void)showFake2;
- (void)showFake3;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_PROTOCOL("_TtP10PULPulsate37PULPulsateUnauthorizedManagerDelegate_")
@protocol PULPulsateUnauthorizedManagerDelegate
- (void)unauthorizedAction:(NSString * _Nonnull)action;
@end


SWIFT_CLASS("_TtC10PULPulsate16PULRemoteStorage")
@interface PULRemoteStorage : NSObject
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     token: token for API
///   </li>
///   <li>
///     error: error
///   </li>
/// </ul>
///
/// returns:
///
- (nullable instancetype)initWithAccessToken:(PULAccessToken * _Nullable)token OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate15PULRevenueEvent")
@interface PULRevenueEvent : NSObject
- (nonnull instancetype)initWithName:(NSString * _Nullable)eventName andAmount:(NSDecimalNumber * _Nullable)amount andCurrency:(enum PULCurrency)currency OBJC_DESIGNATED_INITIALIZER;
+ (NSString * _Nullable)formatCurrencyToString:(enum PULCurrency)currency SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate15PULScreenRecord")
@interface PULScreenRecord : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, strong) NSNumber * _Nullable start_at;
@property (nonatomic, strong) NSNumber * _Nullable end_at;
@property (nonatomic, strong) NSNumber * _Nullable time_spent;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC10PULPulsate21PULSwipeToHideManager")
@interface PULSwipeToHideManager : NSObject
- (nonnull instancetype)initWithView:(UIView * _Nullable)view andHideEventBlock:(void (^ _Nonnull)(void))hideEventBlock andTimeoutEventBlock:(void (^ _Nonnull)(void))timeoutEventBlock OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIWindow;
@class UIApplication;
@class NSData;
@class UNUserNotificationCenter;
@class UNNotification;
@class UNNotificationResponse;
@class NSURL;
@class NSUserActivity;
@protocol UIUserActivityRestoring;

SWIFT_CLASS("_TtC10PULPulsate16PULSystemManager")
@interface PULSystemManager : NSObject <UIApplicationDelegate, UNUserNotificationCenterDelegate>
@property (nonatomic, strong) UIWindow * _Nullable window;
- (nonnull instancetype)initWithPulsateAppDelegate:(BOOL)isPulsateAppDelegate andPulsateNotificationDelegate:(BOOL)isPulsateNotificationDelegate OBJC_DESIGNATED_INITIALIZER;
///
/// returns:
///
- (PULDevice * _Nullable)getDeviceInfo:(BOOL)withPermissions SWIFT_WARN_UNUSED_RESULT;
- (id <UIApplicationDelegate, UNUserNotificationCenterDelegate> _Nullable)getPulsateSystemManager SWIFT_WARN_UNUSED_RESULT;
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     application: <#application description#>
///   </li>
///   <li>
///     deviceToken: <#deviceToken description#>
///   </li>
/// </ul>
- (void)application:(UIApplication * _Nonnull)application didRegisterForRemoteNotificationsWithDeviceToken:(NSData * _Nonnull)deviceToken;
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     application: <#application description#>
///   </li>
///   <li>
///     error:       <#error description#>
///   </li>
/// </ul>
- (void)application:(UIApplication * _Nonnull)application didFailToRegisterForRemoteNotificationsWithError:(NSError * _Nonnull)error;
- (void)registerToPushNotifications;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center willPresentNotification:(UNNotification * _Nonnull)notification withCompletionHandler:(void (^ _Nonnull)(UNNotificationPresentationOptions))completionHandler;
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)handleActionButton:(NSDictionary<NSString *, id> * _Nullable)btnDictionary withGuid:(NSString * _Nullable)guid;
- (void)application:(UIApplication * _Nonnull)application didReceiveRemoteNotification:(NSDictionary * _Nonnull)userInfo fetchCompletionHandler:(void (^ _Nonnull)(UIBackgroundFetchResult))completionHandler;
- (void)applicationDidBecomeActive:(UIApplication * _Nonnull)application;
- (void)applicationWillEnterForeground:(UIApplication * _Nonnull)application;
- (void)applicationDidEnterBackground:(UIApplication * _Nonnull)application;
- (void)applicationWillResignActive:(UIApplication * _Nonnull)application;
- (void)applicationWillTerminate:(UIApplication * _Nonnull)application;
- (BOOL)application:(UIApplication * _Nonnull)app openURL:(NSURL * _Nonnull)url options:(NSDictionary<UIApplicationOpenURLOptionsKey, id> * _Nonnull)options SWIFT_WARN_UNUSED_RESULT;
- (BOOL)application:(UIApplication * _Nonnull)application continueUserActivity:(NSUserActivity * _Nonnull)userActivity restorationHandler:(void (^ _Nonnull)(NSArray<id <UIUserActivityRestoring>> * _Nullable))restorationHandler SWIFT_WARN_UNUSED_RESULT;
- (BOOL)application:(UIApplication * _Nonnull)application openURL:(NSURL * _Nonnull)url sourceApplication:(NSString * _Nullable)sourceApplication annotation:(id _Nonnull)annotation SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class PULTalkLastMessage;

SWIFT_CLASS("_TtC10PULPulsate7PULTalk")
@interface PULTalk : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSDate * _Nullable createdAt;
@property (nonatomic, copy) NSString * _Nullable talkGUID;
@property (nonatomic, copy) NSString * _Nullable userAvatarURL;
@property (nonatomic, copy) NSString * _Nullable adminAvatarURL;
@property (nonatomic, copy) NSString * _Nullable adminName;
@property (nonatomic, copy) NSString * _Nullable adminTitle;
@property (nonatomic, copy) NSString * _Nullable userName;
@property (nonatomic, copy) NSArray<PULTalkLastMessage *> * _Nonnull lastMessages;
@property (nonatomic, strong) NSNumber * _Nullable messagesUnread;
@property (nonatomic, strong) NSNumber * _Nullable bothReplied;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate18PULTalkLastMessage")
@interface PULTalkLastMessage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate18PULTalkMessageCell")
@interface PULTalkMessageCell : UICollectionViewCell
@property (nonatomic, weak) IBOutlet UILabel * _Null_unspecified timestamp;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC10PULPulsate12PULTextBlock")
@interface PULTextBlock : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSString * _Nullable contentText;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getViewIdentifier SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getCacheIdentifier SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10PULPulsate20PULTopViewController")
@interface PULTopViewController : NSObject
+ (id _Nullable)getTopMostViewController SWIFT_WARN_UNUSED_RESULT;
+ (UIViewController * _Nullable)unwrapTopMostViewController SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate7PULUser")
@interface PULUser : NSObject <PULJSONSerializable>
@property (nonatomic, strong) PULDevice * _Nullable device;
@property (nonatomic, copy) NSString * _Nullable userFirstName;
@property (nonatomic, copy) NSString * _Nullable userLastName;
@property (nonatomic, copy) NSString * _Nullable userEmail;
@property (nonatomic, copy) NSString * _Nullable userPhoneNumber;
@property (nonatomic, strong) NSNumber * _Nullable age;
@property (nonatomic, strong) NSNumber * _Nullable isMale;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10PULPulsate13PULUserAction")
@interface PULUserAction : NSObject <PULJSONSerializable>
@property (nonatomic, copy) NSString * _Nullable guid;
@property (nonatomic, copy) NSString * _Nullable action;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic, strong) NSNumber * _Nullable timestamp;
@property (nonatomic, copy) NSArray * _Nullable timestampsArray;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary * _Nullable)getValueDictionary SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithDictionary:(NSDictionary * _Nullable)dictionary OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, PULUserGender, open) {
  PULUserGenderPulMale = 0,
  PULUserGenderPulFemale = 1,
};








#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
